<UserControl x:Class="Hearthstone_Deck_Tracker.Controls.Stats.ArenaStats"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:stats="clr-namespace:Hearthstone_Deck_Tracker.Stats"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:metroChart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart"
             xmlns:enums="clr-namespace:Hearthstone_Deck_Tracker.Enums"
             xmlns:overview="clr-namespace:Hearthstone_Deck_Tracker.Controls.Stats.Arena.Overview"
             xmlns:hearthstoneDeckTracker="clr-namespace:Hearthstone_Deck_Tracker"
             xmlns:utility="clr-namespace:Hearthstone_Deck_Tracker.Utility"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1500">
    <UserControl.Resources>
        <CollectionViewSource x:Key="ArenaRunsViewSource" Source="{Binding Path=FilteredArenaRuns, Source={x:Static stats:CompiledStats.Instance}, IsAsync=True}">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="StartTime" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <enums:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <utility:ConfigWrapper x:Key="ConfigWrapper"/>
    </UserControl.Resources>
    <DockPanel>
        <Expander Header="Filters" DockPanel.Dock="Top" IsExpanded="True">
            <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Timeframe: "/>
                        <ComboBox Width="130" Name="ComboBoxTimeframe" SelectedIndex="3" SelectionChanged="ComboBoxTimeframe_OnSelectionChanged">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=., Converter={StaticResource EnumDescriptionConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Expander>
    <Expander IsExpanded="True" DockPanel.Dock="Top" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
        <Expander.Header>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="CHARTS" Foreground="White"/>
                <CheckBox Name="CheckBoxShowLegends" Content="show legends" Margin="20,0,0,0" Foreground="White" IsChecked="{Binding Path=ArenaStatsShowLegends, Source={StaticResource ConfigWrapper}}"/>
            </StackPanel>
        </Expander.Header>
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
            <Grid>
                <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="1.6667*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Played" Height="300" MinWidth="300" Grid.Column="0">
                        <metroChart:DoughnutChart Background="Transparent" Palette="{StaticResource ClassColorPalette}" Margin="0,0,0,-10"  ChartTitleVisibility="Collapsed" SelectedBrush="Transparent" ChartLegendVisibility="{Binding ElementName=CheckBoxShowLegends, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <metroChart:DoughnutChart.Series>
                                <metroChart:ChartSeries SeriesTitle="Played(%)" DisplayMember="Name" ValueMember="Value" BrushMember="Brush"  ItemsSource="{Binding Path=ArenaPlayedClassesPercent, Source={x:Static stats:CompiledStats.Instance}, IsAsync=True}"/>
                            </metroChart:DoughnutChart.Series>
                    </metroChart:DoughnutChart>
                </GroupBox>
                    <GroupBox Header="Opponenets" Height="300" MinWidth="300" Grid.Column="1">
                        <metroChart:DoughnutChart Background="Transparent" Palette="{StaticResource ClassColorPalette}" Margin="0,0,0,-10"  ChartTitleVisibility="Collapsed" SelectedBrush="Transparent" ChartLegendVisibility="{Binding ElementName=CheckBoxShowLegends, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <metroChart:DoughnutChart.Series>
                                <metroChart:ChartSeries SeriesTitle="Opponents(%)" DisplayMember="Name" ValueMember="Value" BrushMember="Brush"  ItemsSource="{Binding Path=ArenaOpponentClassesPercent, Source={x:Static stats:CompiledStats.Instance}, IsAsync=True}"/>
                        </metroChart:DoughnutChart.Series>
                    </metroChart:DoughnutChart>
                </GroupBox>
                    <GroupBox Header="Avg wins per class" Height="300" MinWidth="300" Grid.Column="2">
                    <metroChart:ClusteredColumnChart Background="Transparent" Palette="{StaticResource ClassColorPalette}" ChartLegendVisibility="Collapsed" Margin="0,0,0,-30" ChartTitleVisibility="Collapsed" SelectedBrush="Transparent">
                        <metroChart:ClusteredColumnChart.Series>
                                <metroChart:ChartSeries SeriesTitle=" " DisplayMember="Name" ValueMember="Value" BrushMember="Brush"  ItemsSource="{Binding Path=AvgWinsPerClass, Source={x:Static stats:CompiledStats.Instance}, IsAsync=True}"/>
                        </metroChart:ClusteredColumnChart.Series>
                    </metroChart:ClusteredColumnChart>
                </GroupBox>
                    <GroupBox Height="300" MinWidth="500" Grid.Column="3">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="WINS BY CLASS" Foreground="White" />
                                <!--<CheckBox  Margin="15,0,0,0" Content="BY CLASS (slow)" Foreground="White" Checked="CheckBoxWinsByClass_OnChecked" Unchecked="CheckBoxWinsByClass_OnUnchecked"/>-->
                            </StackPanel>
                        </GroupBox.Header>
                        <!--<ContentControl Content="{Binding Path=ChartWinsControl, RelativeSource={RelativeSource AncestorType=UserControl}}"/>-->
                        <overview:ChartWinsByClass Margin="0,0,0,-30"/>

                    </GroupBox>
                </Grid>
        </ScrollViewer>
    </Expander>
    <GroupBox Header="ARENA RUNS">
        <DataGrid Name="DataGridArenaRuns" ItemsSource="{Binding Source={StaticResource ArenaRunsViewSource}}" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Class">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding ClassImage}" Width="30" Height="30" RenderOptions.BitmapScalingMode="Fant" ToolTip="{Binding Class}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Started" Binding="{Binding StartTimeString}" SortMemberPath="StartTime"/>
                <DataGridTextColumn Header="Wins" Binding="{Binding Wins}"/>
                <DataGridTextColumn Header="Losses" Binding="{Binding Losses}"/>
                <DataGridTextColumn Header="Gold" Binding="{Binding Gold}"/>
                <DataGridTextColumn Header="Dust" Binding="{Binding Dust}"/>
                <DataGridTextColumn Header="Packs" Binding="{Binding PackCount}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="ToolTip" Value="{Binding PackString}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Cards" Binding="{Binding CardCount}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="ToolTip" Value="{Binding CardString}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Duration" Binding="{Binding DurationString}" SortMemberPath="Duration"/>
                <DataGridTextColumn Header="Region" Binding="{Binding Region}"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.Resources>
                            <CollectionViewSource x:Key="ArenaGamesViewSource" Source="{Binding Games}">
                                <CollectionViewSource.SortDescriptions>
                                    <componentModel:SortDescription PropertyName="StartTime" Direction="Descending"/>
                                </CollectionViewSource.SortDescriptions>
                            </CollectionViewSource>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding ElementName=DataGridArenaRuns, Path=Columns[0].ActualWidth}"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <DataGrid ItemsSource="{Binding Source={StaticResource ArenaGamesViewSource}}" AutoGenerateColumns="False" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="VS" SortMemberPath="OpponentHero">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                            <Image RenderOptions.BitmapScalingMode="Fant" Source="{Binding OpponentHeroImage}" Height="24" Width="24" ToolTip="{Binding OpponentHero}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Started" Binding="{Binding StartTime, StringFormat={}{0:dd.MMM HH:mm}}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Result" Binding="{Binding Result}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Name" Binding="{Binding OpponentName}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Turns" Binding="{Binding Turns}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Coin" Binding="{Binding GotCoin}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Time" Binding="{Binding Duration}" SortMemberPath="SortableDuration">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Note" Binding="{Binding Note}" />
                        </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </GroupBox>
    </DockPanel>
</UserControl>
